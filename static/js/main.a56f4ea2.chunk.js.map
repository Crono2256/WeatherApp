{"version":3,"sources":["components/SearchTab.js","components/Charts.js","components/App.js","reportWebVitals.js","index.js"],"names":["SearchTab","search","error","change","click","submit","className","onSubmit","type","placeholder","value","onChange","onClick","Charts","charts","city","time","temperature","pressure","wind","weather","weatherIcons","icon","hasOwnProperty","getWeatherIcon","APIKey","App","state","activeItem","country","handleInputChange","e","target","setState","handleButtonClick","handleFormSubmit","preventDefault","handleSearchConfirm","fetch","then","res","ok","Error","status","json","data","console","log","timeStr","Date","toISOString","date","substr","main","includes","name","Math","round","temp","speed","catch","err","this","weatherBackgrounds","appStyle","backgroundImage","process","getWeatherBackground","style","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAaeA,EAXG,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACjD,OACE,uBAAMC,UAAU,SAASC,SAAUF,EAAnC,UACE,0DACA,uBAAOG,KAAK,OAAOC,YAAY,kBAAkBC,MAAOT,EAAQU,SAAUR,IAC1E,wBAAQG,UAAU,UAAUM,QAASR,EAArC,oBACCF,GAAS,mBAAGI,UAAU,WAAb,kFCsDDO,EA5DA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAERC,EAA2DD,EAA3DC,KAAMC,EAAqDF,EAArDE,KAAMC,EAA+CH,EAA/CG,YAAaC,EAAkCJ,EAAlCI,SAAUC,EAAwBL,EAAxBK,KAAMC,EAAkBN,EAAlBM,QAE3CC,GAF6DP,EAATQ,KAErC,CACnB,MAAS,aACT,OAAU,eACV,KAAQ,cACR,QAAW,oBACX,KAAQ,6BACR,KAAQ,mBACR,aAAgB,gBAWlB,OACE,sBAAKhB,UAAU,SAAf,UAEE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,oBAAIA,UAAU,OAAd,SAAsBS,MAExB,sBAAKT,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,uBAAMA,UAAU,OAAhB,UAAwBW,EAAY,sBAAMX,UAAU,OAAhB,wBAEtC,qBAAKA,UAAU,gBAAf,SAnBR,SAAwBc,GACtB,OAAIC,EAAaE,eAAeH,GACvB,mBAAGd,UAAWe,EAAaD,KAE3B,mBAAGd,UAAU,iBAgBbkB,CAAeJ,WAKtB,sBAAKd,UAAU,QAAf,UACE,sBAAKA,UAAU,aAAf,UACE,sBAAMA,UAAU,MAAhB,oBACA,sBAAMA,UAAU,OAAhB,SAAwBU,OAG1B,sBAAKV,UAAU,iBAAf,UACE,sBAAMA,UAAU,MAAhB,8BACA,uBAAMA,UAAU,OAAhB,UAAwBY,EAAS,sBAAMZ,UAAU,OAAhB,wBAGnC,sBAAKA,UAAU,aAAf,UACE,sBAAMA,UAAU,MAAhB,8CACA,uBAAMA,UAAU,OAAhB,UAAwBa,EAAK,sBAAMb,UAAU,OAAhB,+BCjDjCmB,G,MAAS,oCAkIAC,E,4MA9HbC,MAAQ,CACN1B,OAAQ,aACR2B,WAAY,OACZd,OAAQ,CACNC,KAAM,GACNc,QAAS,GACTb,KAAM,GACNC,YAAa,GACbC,SAAU,GACVC,KAAM,GACNC,QAAS,IAEXlB,MAAO,I,EAGT4B,kBAAoB,SAACC,GAEnB,IAAM9B,EAAS8B,EAAEC,OAAOtB,MAExB,EAAKuB,SAAS,CACZhC,Y,EAKJiC,kBAAoB,SAACH,GACnB,EAAKE,SAAS,CACZL,WAAY,Y,EAIhBO,iBAAmB,SAAAJ,GACjBA,EAAEK,kB,EAGJC,oBAAsB,WAEpBC,MAAM,qDAAD,OAAsD,EAAKX,MAAM1B,OAAjE,kBAAiFwB,EAAjF,kBACFc,MAAK,SAAAC,GACJ,GAAIA,EAAIC,GACN,OAAOD,EAEP,MAAME,MAAMF,EAAIG,WAGnBJ,MAAK,SAAAC,GAAG,OAAIA,EAAII,UAChBL,MAAK,SAAAM,GAEJC,QAAQC,IAAIF,GACZ,IACMG,GADO,IAAIC,MACIC,cACfC,EAAOH,EAAQI,OAAO,EAAG,IAAM,IAAMJ,EAAQI,OAAO,GAAI,GAC1DhC,EAAUyB,EAAKzB,QAAQ,GAAGiC,KAE1B,CAAC,OAAQ,QAAS,OAAQ,OAAQ,MAAO,OAAQ,MAAO,SAAU,WAAWC,SAASlC,KAAUA,EAAU,QAE9G,EAAKa,SAAS,CACZnB,OAAQ,CACNC,KAAM8B,EAAKU,KACXvC,KAAMmC,EACNlC,YAAauC,KAAKC,MAAMZ,EAAKQ,KAAKK,MAClCxC,SAAU2B,EAAKQ,KAAKnC,SACpBC,KAAM0B,EAAK1B,KAAKwC,MAChBvC,WAEFQ,WAAY,OACZ1B,MAAO,UAGV0D,OAAM,SAAAC,GACLf,QAAQC,IAAI,6CAAqCc,GAEjD,EAAK5B,SAAS,CACZ/B,MAAO2D,Q,kEAObC,KAAKzB,wB,+BAKL,IAAMjB,EAAU0C,KAAKnC,MAAMb,OAAOM,QAE5B2C,EAAqB,CACzB,MAAS,eACT,OAAU,aACV,KAAQ,WACR,QAAW,cACX,KAAQ,YACR,KAAQ,WACR,aAAgB,aAYlB,IAAMC,EAAW,CACfC,gBAAgB,OAAD,OAASC,GAAT,mBAVjB,SAA8B9C,GAE5B,OADA0B,QAAQC,IAAI,aACRgB,EAAmBxC,eAAeH,GAC7B2C,EAAmB3C,GAEnB,eAKgD+C,CAAqB/C,KAG1EQ,EAAakC,KAAKnC,MAAMC,WAE9B,OACE,qBAAKtB,UAAU,MAAM8D,MAAOJ,EAA5B,SACE,sBAAK1D,UAAU,YAAf,UACkB,WAAfsB,GAA2B,cAAC,EAAD,CAAW3B,OAAQ6D,KAAKnC,MAAM1B,OAAQC,MAAO4D,KAAKnC,MAAMzB,MAAOC,OAAQ2D,KAAKhC,kBAAmB1B,MAAO0D,KAAKzB,oBAAqBhC,OAAQyD,KAAK3B,mBACzJ,SAAfP,GAAyB,sBAAKtB,UAAU,OAAf,UACxB,wBAAQA,UAAU,aAAaM,QAASkD,KAAK5B,kBAA7C,SAAgE,mBAAG5B,UAAU,oBAC7E,cAAC,EAAD,CAAQQ,OAAQgD,KAAKnC,MAAMb,qB,GAxHrBuD,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a56f4ea2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchTab = ({ search, error, change, click, submit }) => {\r\n  return (\r\n    <form className=\"search\" onSubmit={submit}>\r\n      <h3>Jakiego miasta szukasz ?</h3>\r\n      <input type=\"text\" placeholder=\"Podaj miasto...\" value={search} onChange={change} />\r\n      <button className=\"confirm\" onClick={click}>Szukaj</button>\r\n      {error && <p className=\"errorMsg\">Wyszukiwanie nie powiodło się. Spróbuj jeszcze raz.</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchTab;","import React from 'react';\r\n\r\nconst Charts = ({ charts }) => {\r\n\r\n  const { city, time, temperature, pressure, wind, weather, icon } = charts;\r\n\r\n  const weatherIcons = {\r\n    'Clear': \"fas fa-sun\",\r\n    'Clouds': \"fas fa-cloud\",\r\n    'Mist': \"fas fa-smog\",\r\n    'Drizzle': \"fas fa-cloud-rain\",\r\n    'Rain': \"fas fa-cloud-showers-heavy\",\r\n    'Snow': \"far fa-snowflake\",\r\n    'Thunderstorm': \"fas fa-bolt\"\r\n  }\r\n\r\n  function getWeatherIcon(weather) {\r\n    if (weatherIcons.hasOwnProperty(weather)) {\r\n      return <i className={weatherIcons[weather]}></i>;\r\n    } else {\r\n      return <i className=\"fas fa-cloud\"></i>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"charts\">\r\n\r\n      <div className=\"main\">\r\n        <div className=\"city chart\">\r\n          <h3 className=\"data\">{city}</h3>\r\n        </div>\r\n        <div className=\"sub\">\r\n          <div className=\"temperature chart\">\r\n            <span className=\"data\">{temperature}<span className=\"unit\">&deg;C</span></span>\r\n          </div>\r\n          <div className=\"weather chart\">\r\n            {getWeatherIcon(weather)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"other\">\r\n        <div className=\"time chart\">\r\n          <span className=\"tag\">Data: </span>\r\n          <span className=\"data\">{time}</span>\r\n        </div>\r\n\r\n        <div className=\"pressure chart\">\r\n          <span className=\"tag\">Ciśnienie: </span>\r\n          <span className=\"data\">{pressure}<span className=\"unit\"> hPa</span></span>\r\n        </div>\r\n\r\n        <div className=\"wind chart\">\r\n          <span className=\"tag\">Prędkość wiatru: </span>\r\n          <span className=\"data\">{wind}<span className=\"unit\"> m/s</span></span>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Charts;","import React from 'react';\nimport SearchTab from './SearchTab';\nimport Charts from './Charts'\nimport '../App.css';\n\nconst APIKey = '16ed9761819e51f4a5ecad833971e589';\n\nclass App extends React.Component {\n\n  state = {\n    search: 'Ostróda',\n    activeItem: 'main',\n    charts: {\n      city: '',\n      country: '',\n      time: '',\n      temperature: '',\n      pressure: '',\n      wind: '',\n      weather: '',\n    },\n    error: ''\n  }\n\n  handleInputChange = (e) => {\n\n    const search = e.target.value;\n\n    this.setState({\n      search\n    })\n\n  }\n\n  handleButtonClick = (e) => {\n    this.setState({\n      activeItem: 'search'\n    })\n  }\n\n  handleFormSubmit = e => {\n    e.preventDefault()\n  }\n\n  handleSearchConfirm = () => {\n\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.search}&appid=${APIKey}&units=metric`)\n      .then(res => {\n        if (res.ok) {\n          return res\n        } else {\n          throw Error(res.status)\n        }\n      })\n      .then(res => res.json())\n      .then(data => {\n\n        console.log(data)\n        const time = new Date();\n        const timeStr = time.toISOString();\n        const date = timeStr.substr(0, 10) + ' ' + timeStr.substr(11, 5);\n        let weather = data.weather[0].main;\n\n        if (['Mist', 'Smoke', 'Haze', 'Dust', 'Fog', 'Sand', 'Ash', 'Squall', 'Tornado'].includes(weather)) weather = 'Mist'\n\n        this.setState({\n          charts: {\n            city: data.name,\n            time: date,\n            temperature: Math.round(data.main.temp),\n            pressure: data.main.pressure,\n            wind: data.wind.speed,\n            weather,\n          },\n          activeItem: 'main',\n          error: null,\n        })\n      })\n      .catch(err => {\n        console.log('Błąd podczas pobierania danych. ' + err);\n\n        this.setState({\n          error: err\n        })\n      })\n\n  }\n\n  componentDidMount() {\n    this.handleSearchConfirm()\n  }\n\n  render() {\n\n    const weather = this.state.charts.weather;\n\n    const weatherBackgrounds = {\n      'Clear': \"blue-sky.jpg\",\n      'Clouds': \"clouds.jpg\",\n      'Mist': \"mist.jpg\",\n      'Drizzle': 'drizzle.jpg',\n      'Rain': \"rain.jpeg\",\n      'Snow': \"snow.jpg\",\n      'Thunderstorm': 'storm.jpg'\n    }\n\n    function getWeatherBackground(weather) {\n      console.log('bg change')\n      if (weatherBackgrounds.hasOwnProperty(weather)) {\n        return weatherBackgrounds[weather];\n      } else {\n        return \"blue-sky.jpg\";\n      }\n    }\n\n    const appStyle = {\n      backgroundImage: `url(${process.env.PUBLIC_URL}/images/${getWeatherBackground(weather)}`,\n    }\n\n    const activeItem = this.state.activeItem;\n\n    return (\n      <div className=\"App\" style={appStyle}>\n        <div className=\"colorFade\">\n          {activeItem === 'search' && <SearchTab search={this.state.search} error={this.state.error} change={this.handleInputChange} click={this.handleSearchConfirm} submit={this.handleFormSubmit} />}\n          {activeItem === 'main' && <div className=\"wrap\">\n            <button className=\"showSearch\" onClick={this.handleButtonClick}><i className=\"fas fa-search\"></i></button>\n            <Charts charts={this.state.charts} />\n          </div>}\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}